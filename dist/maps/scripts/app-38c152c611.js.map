{"version":3,"sources":["scripts/app-38c152c611.js"],"names":["angular","module","$scope","userProfile","$http","Services","$stateParams","$state","userId","deleteUser","onError","sailsResponse","response","go","catch","finally","activateUser","user","onSuccess","toastr","forEach","scopeUser","roles","console","log","then","users","id","data","activated","success","getUsers","indexOf","controller","instituteId","getInstituteName","EnvironmentConfig","fd","append","name","headers","instituteName","fileread","link","FormData","element","bind","list","reader","FileReader","reportTypes","scope","API_URL","loadEvent","Content-Type","undefined","readAsDataURL","changeEvent","directive","onload","target","files","error","eitherWay","instituteAlreadyExists","getInstitute","editInstitute","deleteInstitute","createInstitute","getInstitutes","getToken","tagAlreadyExists","institutes","createTag","getTagCount","registerForm","register","$refresh","createTags","status","tagFile","errors","fileFormat","post","transformRequest","identity","tagName","numTags","reportTypePage","getReportTypes","count","params","listId","Auth","getTags","selectedInstitute","numTagResults","tags","isAllSelected","untaggedOnly","numReportTypeResults","lodash","searchTag","reportTypeQuery","isUntaggedOnlySelected","addTag","numResults","_","report_types","hasTag","some","report_type","selected","tagId","reportTypeId","tagQuery","tag","searchReportType","e","remove","showLoader","allSelectedRemoveTag","selectReportType","toggleAllReportTypes","toggleStatus","allSelectedAddTag","reportTypeToggled","tag_id","report_type_id","removeTag","loaderInView","parts","inviewInfo","toggleUntaggedOnly","deleteTag","loginForm","loading","itm","submitLoginForm","every","signIn","length","index","inview","get","right","top","payload","value","push","Object","assign","logout","message","$hasRole","delete","constant","institute","clearUserProfile","service","$isAnonymous","$isAuthenticated","$isPending","this","credentials","factory","OK","UNAUTHORIZED","FORBIDDEN","Access","$q","reject","$hasAnyRole","activate","UserProfile","fetchUserProfile","getProfile","prop","hasOwnProperty","extend","$stateProvider","state","role","abstract","url","views","filter","templateUrl","anonymous","resolve","hasRole","isAnonymous","PENDING_ADMIN_APPROVAL","access","config","$urlRouterProvider","isAuthenticated","main@app","nav@app","otherwise","$locationProvider","$httpProvider","defaults","$log","run","$templateCache","put","hashPrefix","withCredentials","$rootScope","$on","event","toState","toParams","fromState","fromParams","warn"],"mappings":"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","file":"../../scripts/app-38c152c611.js","sourcesContent":["'use strict';\n\nangular.module('myApp.users.delete', [])\n\n.controller('UsersDeleteCtrl', ['$scope', '$http', 'userProfile', 'Services', '$stateParams', '$state', function($scope, $http, userProfile, Services, $stateParams, $state) {\n\n  $scope.userProfile = userProfile;\n\n  $scope.userId = $stateParams.userId;\n\n  $scope.deleteUser = function(userId) {\n    console.log('userId: ',userId);\n    Services.deleteUser(userId).then(function onSuccess(response) {\n      $state.go('app.users.all');\n    }).catch(function onError(sailsResponse) {\n    }).finally(function eitherWay() {\n    });\n  }\n\n  // getToken();\n  //\n  // function getToken() {\n  //   Services.getToken().then(function onSuccess(response) {\n  //     $scope.apiToken = response.data;\n  //   }).catch(function onError(sailsResponse) {\n  //   }).finally(function eitherWay() {\n  //   });\n  // }\n}]);\n\n'use strict';\n\nangular.module('myApp.users.all', [])\n\n.controller('UsersAllCtrl', ['$scope', '$http', 'userProfile', 'Services', 'toastr', function($scope, $http, userProfile, Services, toastr) {\n\n  $scope.userProfile = userProfile;\n\n  $scope.activateUser = function(user) {\n    console.log('user: ',user);\n    Services.activateUser(user).then(function onSuccess(response) {\n      console.log('response: ',response);\n      $scope.users.forEach(function(scopeUser) {\n        if (scopeUser.id == user.id) {\n          scopeUser.roles = response.data.roles;\n          // if (user.activated) {\n          //   var index = scopeUser.roles.indexOf('ROLE_PENDING_USER');\n          //   scopeUser.roles.splice(index, 1);\n          // } else {\n          //   scopeUser.roles.push('ROLE_PENDING_USER');\n          // }\n        }\n      });\n      if (user.activated) {\n        toastr.success('User has been activated and notified via email.');\n      } else {\n        toastr.success('User has been deactivated and notified via email.');\n      }\n    }).catch(function onError(sailsResponse) {\n    }).finally(function eitherWay() {\n    });\n  }\n\n  getUsers();\n\n  function getUsers() {\n    Services.getUsers().then(function onSuccess(response) {\n      var users = response.data;\n      users.forEach(function(user) {\n        user.activated = user.roles.indexOf('ROLE_PENDING_USER') < 0;\n      });\n      $scope.users = users;\n    }).catch(function onError(sailsResponse) {\n    }).finally(function eitherWay() {\n    });\n  }\n}]);\n\n'use strict';\n\nangular.module('myApp.list.edit', [])\n\n.controller('ListEditCtrl', ['$scope', '$http', '$stateParams', function($scope, $http, $stateParams) {\n\n  //TODO\n\n}]);\n\n'use strict';\n\nangular.module('myApp.list.delete', [])\n\n.controller('ListDeleteCtrl', ['$scope', '$http', '$stateParams', function($scope, $http, $stateParams) {\n\n  //TODO\n\n}]);\n\n'use strict';\n\nangular.module('myApp.list.create', ['bootstrap.fileField'])\n\n.controller('ListCreateCtrl', ['$scope', '$http', '$state', '$stateParams', 'userProfile', 'Services', 'EnvironmentConfig', function($scope, $http, $state, $stateParams, userProfile, Services, EnvironmentConfig) {\n\n  $scope.userProfile = userProfile;\n\n  $scope.instituteId = $stateParams.instituteId;\n\n  getInstituteName();\n\n  function getInstituteName() {\n    Services.getInstituteName($stateParams.instituteId).then(function onSuccess(response) {\n      $scope.instituteName = response.data\n      console.log('response: ',response);\n    }).catch(function onError(sailsResponse) {\n      console.log('problem getting institute name.');\n    }).finally(function eitherWay() {\n    });\n  }\n\n  $scope.createList = function() {\n\n    var fd = new FormData();\n    fd.append('name', $scope.list.name);\n    fd.append('reportTypes', $scope.list.reportTypes);\n\n    $http.post(EnvironmentConfig.API_URL+\"/institutes/\"+$stateParams.instituteId+\"/lists\", fd, {\n      transformRequest: angular.identity,\n      headers: {'Content-Type': undefined}\n    }).then(function(response) {\n      $state.go('app.list.all', { instituteId: $stateParams.instituteId });\n      // $location.path('/institutes/'+$stateParams.instituteId+'/lists');\n    })\n  }\n\n}])\n\n.directive(\"fileread\", [function () {\n    return {\n        scope: {\n            fileread: \"=\"\n        },\n        link: function (scope, element, attributes) {\n            element.bind(\"change\", function (changeEvent) {\n                var reader = new FileReader();\n                reader.onload = function (loadEvent) {\n                    scope.$apply(function () {\n                        scope.fileread = loadEvent.target.result;\n                    });\n                }\n                reader.readAsDataURL(changeEvent.target.files[0]);\n            });\n        }\n    }\n}]);\n\n'use strict';\n\nangular.module('myApp.list.all', [])\n\n.controller('ListAllCtrl', ['$scope', '$http', '$stateParams', 'userProfile', 'Services', 'EnvironmentConfig', function($scope, $http, $stateParams, userProfile, Services, EnvironmentConfig) {\n\n  $scope.userProfile = userProfile;\n\n  $scope.instituteId = $stateParams.instituteId;\n\n  getInstituteName();\n\n  function getInstituteName() {\n    Services.getInstituteName($stateParams.instituteId).then(function onSuccess(response) {\n      $scope.instituteName = response.data\n      console.log('response: ',response);\n    }).catch(function onError(sailsResponse) {\n      console.log('problem getting institute name.');\n    }).finally(function eitherWay() {\n    });\n  }\n\n  $http.get(EnvironmentConfig.API_URL+'/institutes/'+$stateParams.instituteId+'/lists')\n  .then(function onSuccess(response) {\n    $scope.lists = response.data;\n  })\n  .catch(function onError(response) {\n    toastr.error('An unexpected error occurred, please try again', 'Error', {\n      closeButton: true\n    });\n    return;\n  })\n  .finally(function eitherWay() {\n\n  })\n\n}]);\n\n'use strict';\n\nangular.module('myApp.institutes.edit', [])\n\n.controller('InstitutesEditCtrl', ['$scope', '$stateParams', 'Services', '$state', 'userProfile', function($scope, $stateParams, Services, $state, userProfile) {\n\n  $scope.userProfile = userProfile;\n\n  $scope.instituteAlreadyExists = false;\n\n  getInstitute();\n\n  function getInstitute() {\n    Services.getInstitute($stateParams.instituteId).then(function onSuccess(response) {\n      $scope.instituteName = response.data.name;\n    }).catch(function onError(sailsResponse) {\n      console.log('problem getting institute');\n    }).finally(function eitherWay() {\n\n    });\n  }\n\n  $scope.editInstitute = function() {\n    Services.editInstitute({ name: $scope.instituteName, instituteId: $stateParams.instituteId }).then(function onSuccess(response) {\n      $state.go('app.institutes.all');\n    }).catch(function onError(sailsResponse) {\n      $scope.instituteAlreadyExists = true;\n    }).finally(function eitherWay() {\n\n    });\n  }\n\n}]);\n\n'use strict';\n\nangular.module('myApp.institutes.delete', [])\n\n.controller('InstitutesDeleteCtrl', ['$scope', '$stateParams', 'userProfile', 'Services', '$state', function($scope, $stateParams, userProfile, Services, $state) {\n\n  $scope.userProfile = userProfile;\n\n  $scope.deleteInstitute = function() {\n    Services.deleteInstitute($stateParams.instituteId).then(function onSuccess(response) {\n      $state.go('app.institute');\n    }).catch(function onError(sailsResponse) {\n      console.log('problem deleting institute...');\n    }).finally(function eitherWay() {\n\n    });\n  }\n\n}]);\n\n'use strict';\n\nangular.module('myApp.institutes.create', ['bootstrap.fileField'])\n\n.controller('InstitutesCreateCtrl', ['$scope', '$state', 'userProfile', 'Services', function($scope, $state, userProfile, Services) {\n\n  $scope.userProfile = userProfile;\n\n  $scope.instituteAlreadyExists = false;\n\n  $scope.createInstitute = function() {\n    Services.createInstitute($scope.instituteName).then(function onSuccess(response) {\n      $scope.instituteAlreadyExists = false;\n      $scope.instituteName = '';\n      $state.go('app.institutes.all');\n    }).catch(function onError(sailsResponse) {\n      $scope.instituteAlreadyExists = true;\n    }).finally(function eitherWay() {\n\n    });\n  }\n\n}]);\n\n'use strict';\n\nangular.module('myApp.institutes.all', [])\n\n.controller('InstitutesAllCtrl', ['$scope', 'userProfile', 'Services', function($scope, userProfile, Services) {\n\n  $scope.userProfile = userProfile;\n\n  Services.getInstitutes().then(function onSuccess(response) {\n    console.log('success getting institutes...');\n    $scope.institutes = response.data;\n  }).catch(function onError(sailsResponse) {\n    console.log('error');\n  }).finally(function eitherWay() {\n\n  });\n\n}]);\n\n'use strict';\n\nangular.module('myApp.users', [\n  'myApp.users.all',\n  'myApp.users.delete'\n])\n\n'use strict';\n\nangular.module('myApp.token', [])\n\n.controller('TokenCtrl', ['$scope', '$http', 'userProfile', 'Services', function($scope, $http, userProfile, Services) {\n\n  $scope.userProfile = userProfile;\n\n  getToken();\n\n  function getToken() {\n    Services.getToken().then(function onSuccess(response) {\n      $scope.apiToken = response.data;\n    }).catch(function onError(sailsResponse) {\n    }).finally(function eitherWay() {\n    });\n  }\n}]);\n\n'use strict';\n\nangular.module('myApp.tag', [])\n\n.controller('TagCtrl', ['$scope', '$http', 'userProfile', 'Services', 'EnvironmentConfig', function($scope, $http, userProfile, Services, EnvironmentConfig) {\n\n  $scope.userProfile = userProfile;\n\n  $scope.tagAlreadyExists = false;\n\n  $scope.fileFormat = 'simple';\n\n  $scope.createTags = function() {\n    var fd = new FormData();\n    fd.append('tagFile', $scope.tagFile);\n    fd.append('fileFormat', $scope.fileFormat);\n\n    $http.post(EnvironmentConfig.API_URL+\"/uploadLoincDocumentOntologyCSV\", fd, {\n      transformRequest: angular.identity,\n      headers: {'Content-Type': undefined}\n    }).then(function(response) {\n      console.log('upload success...');\n      console.log('response: ',response);\n      // $location.path('/institutes/'+userProfile.institute.id+'/lists');\n    })\n  }\n\n  $scope.createTag = function() {\n    Services.createTag($scope.tagName).then(function onSuccess(response) {\n      $scope.numTags = $scope.numTags + 1;\n      $scope.tagAlreadyExists = false;\n      $scope.tagName = '';\n    }).catch(function onError(sailsResponse) {\n      $scope.tagAlreadyExists = true;\n    }).finally(function eitherWay() {\n\n    });\n  }\n\n  getTagCount();\n\n  function getTagCount() {\n    Services.getTagCount().then(function onSuccess(response) {\n      console.log('tag count: ',response);\n      $scope.numTags = response.data.count;\n    }).catch(function onError(sailsResponse) {\n      console.log('problem getting tag count');\n    }).finally(function eitherWay() {\n\n    });\n  }\n\n\n}]);\n\n'use strict';\n\nangular.module('myApp.register', [])\n\n.controller('RegisterCtrl', ['$scope', 'Services', 'Auth', 'userProfile', '$state', function($scope, Services, Auth, userProfile, $state) {\n\n  getInstitutes();\n\n  $scope.registerForm = {};\n\n  function getInstitutes() {\n    Services.getInstitutes().then(function onSuccess(response) {\n      $scope.institutes = response.data;\n      $scope.registerForm.selectedInstitute = response.data[0];\n    }).catch(function onError(response) {\n      console.log('error: ',response);\n    }).finally(function eitherWay() {\n    });\n  }\n\n  $scope.register = function() {\n    Auth.signUp($scope.registerForm).then(function onSuccess(response) {\n      return userProfile.$refresh();\n    }).then(function() {\n      $state.go('app.pending');\n    }).catch(function onError(response) {\n      if (response.status == 400) {\n        $scope.registerForm.errors = \"Please enter all required fields\";\n      } else {\n        $scope.registerForm.errors = \"There was an unexpected problem. Please try again.\";\n      }\n    });\n\n  }\n\n}]);\n\n'use strict';\n\nangular.module('myApp.pending', [])\n\n.controller('PendingCtrl', ['$scope', '$http', 'toastr', '$state', 'userProfile', 'Auth', function($scope, $http, toastr, $state, userProfile, Auth) {\n\n  console.log('loading pending ctrl.');\n\n}]);\n\n'use strict';\n\nangular.module('myApp.map', ['ngLodash'])\n\n.controller('MapCtrl', ['$scope', 'lodash', '$stateParams', 'userProfile', 'Services', function($scope, lodash, $stateParams, userProfile, Services) {\n\n  $scope.userProfile = userProfile;\n\n  $scope.reportTypePage = 0;\n\n  $scope.showLoader = false;\n\n  $scope.isUntaggedOnlySelected = false;\n\n  getReportTypes();\n  getTags();\n\n  function getReportTypes() {\n\n    var params = {\n      instituteId: $stateParams.instituteId,\n      listId: $stateParams.listId,\n      reportTypePage: $scope.reportTypePage,\n      reportTypeQuery: '',\n      untaggedOnly: $scope.isUntaggedOnlySelected ? $scope.isUntaggedOnlySelected : ''\n    }\n\n    Services.getReportTypes(params).then(function onSuccess(response) {\n      $scope.numReportTypeResults = response.data.numResults;\n      console.log('response: ',response);\n      $scope.report_types = response.data.reportTypes;\n      if (response.data.reportTypes.length == 30) {\n        $scope.showLoader = true;\n      } else {\n        $scope.showLoader = false;\n      }\n    }).catch(function onError(sailsResponse) {\n      console.log('error');\n    }).finally(function eitherWay() {\n\n    });\n  }\n\n  function getTags() {\n\n    var params = {\n      instituteId: $stateParams.instituteId,\n      listId: $stateParams.listId,\n      tagQuery: ''\n    }\n\n    Services.getTags(params).then(function onSuccess(response) {\n      $scope.numTagResults = response.data.numResults;\n      $scope.tags = response.data.tags;\n    }).catch(function onError(sailsResponse) {\n      console.log('problem getting tags.');\n    }).finally(function eitherWay() {\n\n    });\n  }\n\n  $scope.searchReportType = function(e) {\n    $scope.isAllSelected = false;\n    $scope.isUntaggedOnlySelected = false;\n\n    $scope.reportTypePage = 0;\n\n    var params = {\n      instituteId: $stateParams.instituteId,\n      listId: $stateParams.listId,\n      reportTypePage: $scope.reportTypePage,\n      reportTypeQuery: $scope.reportTypeQuery,\n      untaggedOnly: $scope.isUntaggedOnlySelected ? $scope.isUntaggedOnlySelected : ''\n    }\n\n    Services.getReportTypes(params).then(function onSuccess(response) {\n      $scope.numReportTypeResults = response.data.numResults;\n      $scope.report_types = response.data.reportTypes;\n      if (response.data.reportTypes.length == 30) {\n        $scope.showLoader = true;\n      } else {\n        $scope.showLoader = false;\n      }\n    }).catch(function onError(sailsResponse) {\n      console.log('error');\n    }).finally(function eitherWay() {\n      console.log('either way...');\n    });\n\n  }\n\n  $scope.searchTag = function(e) {\n\n    var params = {\n      instituteId: $stateParams.instituteId,\n      listId: $stateParams.listId,\n      tagQuery: $scope.tagQuery\n    }\n\n    Services.getTags(params).then(function onSuccess(response) {\n      $scope.numTagResults = response.data.numResults;\n      $scope.tags = response.data.tags;\n    }).catch(function onError(sailsResponse) {\n      console.log('error');\n    }).finally(function eitherWay() {\n      console.log('either way...');\n    });\n\n  }\n\n  $scope.addTag = function(tag) {\n    if (!$scope.isAllSelected) {\n      _.forEach($scope.report_types, function(report_type) {\n        var hasTag = _.some(report_type.tags, {'id': tag.id});\n        if (report_type.selected && !hasTag) {\n          report_type.tags.push(tag);\n          var params = {\n            instituteId: $stateParams.instituteId,\n            listId: $stateParams.listId,\n            tagId: tag.id,\n            reportTypeId: report_type.id\n          }\n          Services.addTag(params).then(function onSuccess(response) {\n\n          }).catch(function onError(sailsResponse) {\n            console.log('error');\n          }).finally(function eitherWay() {\n\n          });\n        }\n      });\n    } else {\n      _.forEach($scope.report_types, function(report_type) {\n        var hasTag = _.some(report_type.tags, {'id': tag.id});\n        if (report_type.selected && !hasTag) {\n          report_type.tags.push(tag);\n        }\n      });\n      var params = {\n        instituteId: $stateParams.instituteId,\n        listId: $stateParams.listId,\n        tagId: tag.id,\n        reportTypeQuery: $scope.reportTypeQuery\n      }\n      Services.allSelectedAddTag(params).then(function onSuccess(response) {\n\n      }).catch(function onError(sailsResponse) {\n        console.log('error');\n      }).finally(function eitherWay() {\n\n      });\n    }\n  }\n\n  $scope.bulkRemoveTag = function(tag) {\n    if (!$scope.isAllSelected) {\n      _.forEach($scope.report_types, function(report_type) {\n        var hasTag = _.some(report_type.tags, {'id': tag.id});\n        if (report_type.selected && hasTag) {\n          _.remove(report_type.tags, {id: tag.id});\n          var params = {\n            instituteId: $stateParams.instituteId,\n            listId: $stateParams.listId,\n            tagId: tag.id,\n            reportTypeId: report_type.id\n          }\n          Services.removeTag(params).then(function onSuccess(response) {\n\n          }).catch(function onError(sailsResponse) {\n            console.log('error');\n          }).finally(function eitherWay() {\n\n          });\n        }\n      });\n    } else {\n      _.forEach($scope.report_types, function(report_type) {\n        var hasTag = _.some(report_type.tags, {'id': tag.id});\n        if (report_type.selected && hasTag) {\n          _.remove(report_type.tags, {id: tag.id});\n        }\n      });\n      var params = {\n        instituteId: $stateParams.instituteId,\n        listId: $stateParams.listId,\n        tagId: tag.id,\n        reportTypeQuery: $scope.reportTypeQuery\n      }\n      Services.allSelectedRemoveTag(params).then(function onSuccess(response) {\n\n      }).catch(function onError(sailsResponse) {\n        console.log('error');\n      }).finally(function eitherWay() {\n\n      });\n    }\n  }\n\n  $scope.selectReportType = function(report_type) {\n    if (report_type.selected) {\n      _.forEach($scope.tags, function(tag) {\n        tag.selected = false;\n      });\n    }\n  }\n\n  $scope.deleteTag = function(report_type_id, tag_id) {\n    _.forEach($scope.report_types, function(report_type) {\n      if (report_type.id == report_type_id) {\n        var hasTag = _.some(report_type.tags, {'id': tag_id});\n        if (hasTag) {\n          _.remove(report_type.tags, {id: tag_id});\n          var params = {\n            instituteId: $stateParams.instituteId,\n            listId: $stateParams.listId,\n            tagId: tag_id,\n            reportTypeId: report_type_id\n          }\n          Services.removeTag(params).then(function onSuccess(response) {\n\n          }).catch(function onError(sailsResponse) {\n            console.log('error');\n          }).finally(function eitherWay() {\n\n          });\n        }\n      }\n    });\n  }\n\n  $scope.instituteId = $stateParams.instituteId;\n\n  getInstituteName();\n\n  function getInstituteName() {\n    Services.getInstituteName($stateParams.instituteId).then(function onSuccess(response) {\n      $scope.instituteName = response.data\n    }).catch(function onError(sailsResponse) {\n      console.log('problem getting institute name.');\n    }).finally(function eitherWay() {\n    });\n  }\n\n  $scope.toggleAllReportTypes = function() {\n    var toggleStatus = $scope.isAllSelected;\n    angular.forEach($scope.report_types, function(itm){ itm.selected = toggleStatus; });\n  }\n\n  $scope.reportTypeToggled = function(){\n    $scope.isAllSelected = $scope.report_types.every(function(itm){ return itm.selected; })\n  }\n\n  $scope.toggleHideTags = function() {\n    console.log('hiding tags...');\n  }\n\n  $scope.toggleUntaggedOnly = function() {\n    $scope.isAllSelected = false;\n    $scope.reportTypePage = 0;\n\n    var params = {\n      instituteId: $stateParams.instituteId,\n      listId: $stateParams.listId,\n      reportTypePage: $scope.reportTypePage,\n      reportTypeQuery: $scope.reportTypeQuery ? $scope.reportTypeQuery : '',\n      untaggedOnly: $scope.isUntaggedOnlySelected ? $scope.isUntaggedOnlySelected : ''\n    }\n\n    Services.getReportTypes(params).then(function onSuccess(response) {\n      $scope.numReportTypeResults = response.data.numResults;\n      $scope.report_types = response.data.reportTypes;\n      console.log('response: ',response);\n      if (response.data.reportTypes.length > 0) {\n        $scope.showLoader = true;\n      } else {\n        $scope.showLoader = false;\n      }\n    }).catch(function onError(sailsResponse) {\n      console.log('error');\n    }).finally(function eitherWay() {\n      console.log('either way...');\n    });\n  }\n\n  $scope.loaderInView = function(index,inview,inviewInfo) {\n    var parts = inviewInfo.parts;\n    if (parts && parts.bottom && parts.left && parts.right && parts.top) {\n\n        $scope.reportTypePage = $scope.reportTypePage + 1;\n\n        var params = {\n          instituteId: $stateParams.instituteId,\n          listId: $stateParams.listId,\n          reportTypePage: $scope.reportTypePage,\n          reportTypeQuery: $scope.reportTypeQuery ? $scope.reportTypeQuery : '',\n          untaggedOnly: $scope.isUntaggedOnlySelected ? $scope.isUntaggedOnlySelected : ''\n        }\n\n        Services.getReportTypes(params).then(function onSuccess(response) {\n          _.forEach(response.data.reportTypes, function(value) {\n            $scope.report_types.push(Object.assign({},value, {selected: $scope.isAllSelected}));\n          });\n\n          if (response.data.reportTypes.length == 30) {\n            $scope.showLoader = true;\n          } else {\n            $scope.showLoader = false;\n          }\n        }).catch(function onError(sailsResponse) {\n          console.log('error');\n        }).finally(function eitherWay() {\n          console.log('either way...');\n        });\n    }\n  }\n\n\n}]);\n\n'use strict';\n\nangular.module('myApp.nav', [])\n\n.controller('NavCtrl', ['$scope', 'userProfile', function($scope, userProfile) {\n\n  $scope.userProfile = userProfile;\n\n}]);\n\n'use strict';\n\nangular.module('myApp.logout', [])\n\n.controller('LogoutCtrl', ['$scope', 'userProfile', 'Auth', function($scope, userProfile, Auth) {\n\n  logout();\n\n  function logout() {\n\n    Auth.logout().then(function() {\n      return userProfile.$refresh();\n    });\n\n  }\n\n}]);\n\n'use strict';\n\nangular.module('myApp.login', [])\n\n.controller('LoginCtrl', ['$scope', '$state', '$stateParams', 'userProfile', 'Auth', function($scope, $state, $stateParams, userProfile, Auth) {\n\n  $scope.loginForm = {\n    loading: false\n  }\n\n  $scope.message = $stateParams.message;\n\n  $scope.submitLoginForm = function() {\n\n    $scope.loginForm.loading = true;\n    Auth.signIn($scope.loginForm.credentials).then(function onSuccess() {\n      return userProfile.$refresh();\n    }).then(function() {\n      if (userProfile.$hasRole('ROLE_ADMIN')) {\n        console.log(\"is admin...\");\n        $state.go('app.institutes.all');\n      } else {\n        console.log(\"is not admin...\");\n        $state.go('app.lists.all', { instituteId: userProfile.institute.id });\n      }\n    }).catch(function onError() {\n      $scope.loginForm.loading = false;\n      $scope.loginForm.errors = \"Please enter correct email/password\";\n    });\n  }\n\n}]);\n\n'use strict';\n\n// Declare app level module which depends on views, and components\nangular.module('myApp.list', [\n  'myApp.list.all',\n  'myApp.list.create',\n  'myApp.list.delete',\n  'myApp.list.edit'\n])\n\n'use strict';\n\n// Declare app level module which depends on views, and components\nangular.module('myApp.institutes', [\n  'myApp.institutes.all',\n  'myApp.institutes.create',\n  'myApp.institutes.delete',\n  'myApp.institutes.edit'\n])\n\nangular.module('myApp.services', [])\n\n.service(\"Services\", [\"$http\", \"EnvironmentConfig\", function ($http, EnvironmentConfig) {\n\n  this.getReportTypes = function(params) {\n    return $http.get(EnvironmentConfig.API_URL+'/institutes/'+params.instituteId+'/lists/'+params.listId+'/reportTypes?page='+params.reportTypePage+'&query='+params.reportTypeQuery+'&untaggedOnly='+params.untaggedOnly)\n  }\n\n  this.getToken = function() {\n    return $http.get(EnvironmentConfig.API_URL+'/getToken');\n  }\n\n  this.getTags = function(params) {\n    return $http.get(EnvironmentConfig.API_URL+'/institutes/'+params.instituteId+'/lists/'+params.listId+'/tags?query='+params.tagQuery)\n  }\n\n  this.addTag = function(params) {\n    var payload = {\n      reportTypeId: params.reportTypeId,\n      tagId: params.tagId\n    };\n    return $http.post(EnvironmentConfig.API_URL+'/institutes/'+params.instituteId+'/lists/'+params.listId+'/addTag', payload)\n  }\n\n  this.allSelectedAddTag = function(params) {\n    var payload = {\n      reportTypeQuery: params.reportTypeQuery,\n      tagId: params.tagId\n    };\n    return $http.post(EnvironmentConfig.API_URL+'/institutes/'+params.instituteId+'/lists/'+params.listId+'/allSelectedAddTag', payload)\n  }\n\n  this.removeTag = function(params) {\n    var payload = {\n      reportTypeId: params.reportTypeId,\n      tagId: params.tagId\n    };\n    return $http.post(EnvironmentConfig.API_URL+'/institutes/'+params.instituteId+'/lists/'+params.listId+'/removeTag', payload)\n  }\n\n  this.allSelectedRemoveTag = function(params) {\n    var payload = {\n      reportTypeQuery: params.reportTypeQuery,\n      tagId: params.tagId\n    };\n    return $http.post(EnvironmentConfig.API_URL+'/institutes/'+params.instituteId+'/lists/'+params.listId+'/allSelectedRemoveTag', payload)\n  }\n\n  this.createTag = function(name) {\n    return $http.post(EnvironmentConfig.API_URL+'/tags', { name: name });\n  }\n\n  this.getTagCount = function() {\n    return $http.get(EnvironmentConfig.API_URL+'/tags/count')\n  }\n\n  this.getInstitutes = function() {\n    return $http.get(EnvironmentConfig.API_URL+'/institutes')\n  }\n\n  this.createInstitute = function(name) {\n    return $http.post(EnvironmentConfig.API_URL+'/institutes', { name: name });\n  }\n\n  this.getInstitute = function(instituteId) {\n    return $http.get(EnvironmentConfig.API_URL+'/institutes/'+instituteId);\n  }\n\n  this.editInstitute = function(params) {\n    return $http.post(EnvironmentConfig.API_URL+'/institutes/'+params.instituteId, { name: params.name });\n  }\n\n  this.deleteInstitute = function(instituteId) {\n    return $http.delete(EnvironmentConfig.API_URL+'/institutes/'+instituteId);\n  }\n\n  this.getInstituteName = function(instituteId) {\n    return $http.get(EnvironmentConfig.API_URL+'/institutes/'+instituteId+'/name');\n  }\n\n  this.getUsers = function() {\n    return $http.get(EnvironmentConfig.API_URL+'/users');\n  }\n\n  this.activateUser = function(user) {\n    return $http.post(EnvironmentConfig.API_URL+'/users/'+user.id+'/activate', { activate: user.activated });\n  }\n\n  this.deleteUser = function(userId) {\n    return $http.delete(EnvironmentConfig.API_URL+'/users/'+userId);\n  }\n\n}])\n\nangular.module(\"myApp.config\", [])\n.constant(\"EnvironmentConfig\", {\"API_URL\":\"http://report-type-mapper.hdap.gatech.edu:1338\"});\n\nangular.module('myApp.UserProfile', [])\n\n.factory(\"UserProfile\", [\"Auth\", function (Auth) {\n\n  var userProfile = {};\n\n  var clearUserProfile = function () {\n    for (var prop in userProfile) {\n      if (userProfile.hasOwnProperty(prop)) {\n        delete userProfile[prop];\n      }\n    }\n  };\n\n  var fetchUserProfile = function () {\n    return Auth.getProfile().then(function (response) {\n      clearUserProfile();\n      return angular.extend(userProfile, response.data, {\n\n        $refresh: fetchUserProfile,\n\n        $hasRole: function (role) {\n          if (!userProfile.roles) {\n            return false;\n          }\n          return userProfile.roles.indexOf(role) >= 0;\n        },\n\n        $hasAnyRole: function (roles) {\n          return !!userProfile.roles.filter(function (role) {\n            return roles.indexOf(role) >= 0;\n          }).length;\n        },\n\n        $isAnonymous: function () {\n          return userProfile.anonymous;\n        },\n\n        $isAuthenticated: function () {\n          return userProfile.userId;\n        },\n\n        $isPending: function () {\n          if (!userProfile.roles) {\n            return false;\n          }\n          return userProfile.roles.indexOf('ROLE_PENDING_USER') >= 0;\n        }\n\n      });\n    });\n  };\n\n  return fetchUserProfile();\n\n}])\n\nangular.module('myApp.Auth', [])\n\n.service(\"Auth\", [\"$http\", \"EnvironmentConfig\", function ($http, EnvironmentConfig) {\n\n\n\n  this.getProfile = function () {\n    return $http.get(EnvironmentConfig.API_URL+\"/me\");\n  };\n\n  this.signIn = function(credentials) {\n    return $http.post(EnvironmentConfig.API_URL+\"/login\", credentials).then(function (response) {\n      // authentication succeeded, store the response access token somewhere (if any)\n    });\n  };\n\n  this.signUp = function(params) {\n    return $http.post(EnvironmentConfig.API_URL+\"/signup\", params);\n  }\n\n  this.logout = function() {\n    return $http.get(EnvironmentConfig.API_URL+\"/logout\");\n  };\n\n}])\n\n'use strict';\n\nangular.module('myApp.Access', [])\n\n.factory(\"Access\", [\"$q\", \"UserProfile\", function ($q, UserProfile) {\n\n  var Access = {\n\n    OK: 200,\n\n    // \"we don't know who you are, so we can't say if you're authorized to access\n    // this resource or not yet, please sign in first\"\n    UNAUTHORIZED: 401,\n\n    // \"we know who you are, and your profile does not allow you to access this resource\"\n    FORBIDDEN: 403,\n\n    hasRole: function (role) {\n      return UserProfile.then(function (userProfile) {\n        if (userProfile.$hasRole(role)) {\n          return Access.OK;\n        } else if (userProfile.$isAnonymous()) {\n          return $q.reject(Access.UNAUTHORIZED);\n        } else {\n          return $q.reject(Access.FORBIDDEN);\n        }\n      });\n    },\n\n    hasAnyRole: function (roles) {\n      return UserProfile.then(function (userProfile) {\n        if (userProfile.$hasAnyRole(roles)) {\n          return Access.OK;\n        } else if (userProfile.$isAnonymous()) {\n          return $q.reject(Access.UNAUTHORIZED);\n        } else {\n          return $q.reject(Access.FORBIDDEN);\n        }\n      });\n    },\n\n    isAnonymous: function () {\n      return UserProfile.then(function (userProfile) {\n        if (userProfile.$isAnonymous()) {\n          return Access.OK;\n        } else {\n          return $q.reject(Access.FORBIDDEN);\n        }\n      });\n    },\n\n    isAuthenticated: function () {\n      return UserProfile.then(function (userProfile) {\n        if (userProfile.$isAuthenticated() && !userProfile.$isPending()) {\n          return Access.OK;\n        } else if (userProfile.$isPending()) {\n          return $q.reject(Access.PENDING_ADMIN_APPROVAL);\n        } else {\n          return $q.reject(Access.UNAUTHORIZED);\n        }\n      });\n    }\n\n  };\n\n  return Access;\n\n}])\n\n'use strict';\n\n/* @nginject */\n// Declare app level module which depends on views, and components\nangular.module('app', [\n  'ui.router',\n  'toastr',\n  'ngAnimate',\n  'LocalStorageModule',\n  'myApp.config',\n  'myApp.map',\n  'myApp.tag',\n  'myApp.token',\n  'myApp.users',\n  'myApp.login',\n  'myApp.logout',\n  'myApp.register',\n  'myApp.list',\n  'myApp.pending',\n  'myApp.institutes',\n  'myApp.Access',\n  'myApp.Auth',\n  'myApp.services',\n  'myApp.UserProfile',\n  'myApp.nav',\n  'angular-inview'\n])\n.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('app', {\n      abstract: true,\n      templateUrl: 'app/views/app.html',\n      resolve: {\n        userProfile: \"UserProfile\"\n      }\n    })\n    .state('app.login', {\n      url: '/login',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/login/login.html',\n          controller: 'LoginCtrl'\n        }\n      },\n      params: {\n        message: null\n      }\n    })\n    .state('app.register', {\n      url: '/register',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/register/register.html',\n          controller: 'RegisterCtrl'\n        }\n      }\n    })\n    .state('app.logout', {\n      url: '/logout',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html'\n        },\n        'main@app': {\n          templateUrl: 'app/views/logout/logout.html',\n          controller: 'LogoutCtrl'\n        }\n      }\n    })\n    // *** USERS ***\n    .state('app.users', {\n      abstract: true\n    })\n    .state('app.users.all', {\n      url: '/users',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/users/all/all.html',\n          controller: 'UsersAllCtrl'\n        }\n      },\n      resolve: {\n        access: [\"Access\", function(Access) { return Access.hasRole('ROLE_ADMIN'); }]\n      }\n    })\n    .state('app.users.delete', {\n      url: '/users/:userId/delete',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/users/delete/delete.html',\n          controller: 'UsersDeleteCtrl'\n        }\n      },\n      resolve: {\n        access: [\"Access\", function(Access) { return Access.hasRole('ROLE_ADMIN'); }]\n      }\n    })\n    // *** INSTITUTE ***\n    .state('app.institutes', {\n      abstract: true\n    })\n    .state('app.institutes.all', {\n      url: '/institutes',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/institutes/all/all.html',\n          controller: 'InstitutesAllCtrl'\n        }\n      },\n      resolve: {\n        access: [\"Access\", function(Access) { return Access.hasRole('ROLE_ADMIN'); }]\n        // userProfile: \"UserProfile\"\n      }\n    })\n    .state('app.institutes.create', {\n      url: '/institutes/create',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/institutes/create/create.html',\n          controller: 'InstitutesCreateCtrl'\n        }\n      }\n    })\n    .state('app.institutes.delete', {\n      url: '/institutes/:instituteId/delete',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/institutes/delete/delete.html',\n          controller: 'InstitutesDeleteCtrl'\n        }\n      }\n    })\n    .state('app.institutes.edit', {\n      url: '/institutes/:instituteId/edit',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/institutes/edit/edit.html',\n          controller: 'InstitutesEditCtrl'\n        }\n      }\n    })\n\n\n    .state('app.map', {\n      url: '/institutes/:instituteId/lists/:listId/map',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/map/map.html',\n          controller: 'MapCtrl'\n        }\n      },\n      resolve: {\n        access: [\"Access\", function(Access) { return Access.isAuthenticated(); }]\n        // userProfile: \"UserProfile\"\n      }\n    })\n    .state('app.tags', {\n      url: '/tags',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/tag/tag.html',\n          controller: 'TagCtrl'\n        }\n      },\n      resolve: {\n        access: [\"Access\", function(Access) { return Access.isAuthenticated(); }],\n      }\n    })\n    .state('app.token', {\n      url: '/token',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/token/token.html',\n          controller: 'TokenCtrl'\n        }\n      },\n      resolve: {\n        access: [\"Access\", function(Access) { return Access.isAuthenticated(); }],\n      }\n    })\n    // *** LIST ***\n    .state('app.list', {\n      abstract: true\n    })\n    .state('app.list.all', {\n      url: '/institutes/:instituteId/lists',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/list/all/all.html',\n          controller: 'ListAllCtrl'\n        }\n      },\n      resolve: {\n        access: [\"Access\", function(Access) { return Access.isAuthenticated(); }],\n      }\n    })\n    .state('app.list.create', {\n      url: '/institutes/:instituteId/lists/create',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/list/create/create.html',\n          controller: 'ListCreateCtrl'\n        }\n      },\n      resolve: {\n        access: [\"Access\", function(Access) { return Access.isAuthenticated(); }],\n      }\n    })\n    .state('app.list.delete', {\n      url: '/institute/:instituteId/list/:listId/delete',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/list/delete/delete.html',\n          controller: 'ListDeleteCtrl'\n        }\n      }\n    })\n    .state('app.list.edit', {\n      url: '/institute/:instituteId/list/:listId/edit',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/list/edit/edit.html',\n          controller: 'ListEditCtrl'\n        }\n      }\n    })\n    // *** PENDING ***\n    .state('app.pending', {\n      url: '/pending',\n      views: {\n        'nav@app': {\n          templateUrl: 'app/views/nav/main-nav.html',\n          controller: 'NavCtrl'\n        },\n        'main@app': {\n          templateUrl: 'app/views/pending/pending.html',\n          controller: 'PendingCtrl'\n        }\n      }\n    })\n\n  $urlRouterProvider.otherwise('/login');\n}])\n.config(['$locationProvider', '$httpProvider', function($locationProvider, $httpProvider) {\n  $locationProvider.hashPrefix('!');\n  $httpProvider.defaults.withCredentials = true;\n}])\n// run([\"Access\", \"$state\", \"$log\", \"$transitions\", function (, Access, $state, $log, $transitions) {\n//\n//   $transitions.onError({}, (transition) => {\n//\n//     switch (transition.error().detail) {\n//       case Access.UNAUTHORIZED:\n//         $state.go(\"app.login\", { message: 'User unauthorized, login first.' });\n//         break;\n//\n//       case Access.FORBIDDEN:\n//\n//         $state.go(\"/forbidden\");\n//         break;\n//\n//       case Access.PENDING_ADMIN_APPROVAL:\n//         $state.go(\"/pending\");\n//         break;\n//\n//       default:\n//         $log.warn(\"$stateChangeError event catched\");\n//         break;\n//     }\n//   });\n//\n// }])\n\n\n.run([\"$rootScope\", \"Access\", \"$state\", \"$log\", function ($rootScope, Access, $state, $log) {\n\n  $rootScope.$on(\"$stateChangeError\", function (event, toState, toParams, fromState, fromParams, error) {\n\n    console.log('state error triggered!!!');\n    switch (error) {\n\n      case Access.UNAUTHORIZED:\n        console.log('unauth!!!');\n        $state.go(\"app.login\", { message: 'You are unauthorized to do that.' });\n        break;\n\n      case Access.FORBIDDEN:\n        console.log('forbidden!!!');\n        $state.go(\"app.login\", { message: 'You lack privileges to do that.' });\n        break;\n\n      case Access.PENDING_ADMIN_APPROVAL:\n        $state.go(\"app.pending\");\n        break;\n\n      default:\n        $log.warn(\"$stateChangeError event catched\");\n        break;\n\n    }\n  });\n\n}])\n\nangular.module('app').run(['$templateCache', function($templateCache) {$templateCache.put('app/views/app.html','<div ui-view=nav></div><div ui-view=main class=main></div>');\n$templateCache.put('app/views/login/login.html','<section class=section><div class=container><div class=\"columns is-centered\"><div class=\"column is-half\"><nav class=panel><p class=panel-heading>Login</p><div class=panel-block style=display:block><div class=\"notification is-warning login-warning\" ng-show=message>{{message}}</div><div class=field><p class=\"control has-icons-left has-icons-right\"><input class=input type=email placeholder=Email ng-model=loginForm.credentials.email> <span class=\"icon is-small is-left\"><i class=\"fa fa-envelope\"></i> </span><span class=\"icon is-small is-right\"><i class=\"fa fa-check\"></i></span></p></div><div class=field><p class=\"control has-icons-left\"><input class=input type=password placeholder=Password ng-model=loginForm.credentials.password> <span class=\"icon is-small is-left\"><i class=\"fa fa-lock\"></i></span></p></div><div class=field><p class=control><button class=\"button is-link is-large is-outlined is-fullwidth\" ng-class=\"loginForm.loading ? \\'is-loading\\' : \\'\\'\" ng-click=submitLoginForm()>Login</button></p></div><div class=\"notification is-danger\" ng-show=loginForm.errors>{{loginForm.errors}}</div></div></nav></div></div></div></section>');\n$templateCache.put('app/views/map/map.html','<section class=section><div class=container><nav class=\"breadcrumb has-arrow-separator\" aria-label=breadcrumbs><ul><li><a href=#>{{instituteName}}</a></li><li><a href=/#!/institutes/{{instituteId}}/lists>Lists</a></li><li class=is-active><a href=# aria-current=page>Map</a></li></ul></nav><div class=columns><div class=\"column report-type-list\"><nav class=panel><p class=panel-heading>Report Types <span class=\"tag is-light\">{{numReportTypeResults}}&nbsp;results</span></p><div class=panel-block><p class=\"control has-icons-left\"><input class=\"input is-small\" type=text placeholder=search ng-model=reportTypeQuery ng-keyup=searchReportType($event)> <span class=\"icon is-small is-left\"><i class=\"fa fa-search\"></i></span></p></div><div class=panel-block><input type=checkbox ng-model=isAllSelected ng-click=toggleAllReportTypes()> <span class=modifier>Select All</span> <input type=checkbox ng-model=isUntaggedOnlySelected ng-click=toggleUntaggedOnly()> <span class=modifier>Untagged Only</span> <input type=checkbox ng-model=isHideTagsSelected ng-click=toggleHideTags()> <span class=modifier>Hide Tags</span></div><div id=report-type-list in-view-container><div class=\"panel-block report_type-panel-block\" data-id={{report_type.id}} ng-repeat=\"report_type in report_types\"><div class=report_type-info ng-class=\"{\\'hide-tags\\': isHideTagsSelected}\"><input type=checkbox ng-model=report_type.selected ng-click=selectReportType(report_type) ng-change=reportTypeToggled()> <span>{{report_type.name}}</span> <span class=\"tag is-danger just-tag-count\" ng-show=\"isHideTagsSelected && report_type.tags.length > 0\">{{report_type.tags.length}}</span></div><div class=\"field is-grouped is-grouped-multiline tag-list\" ng-if=!isHideTagsSelected><div class=control data-id={{tag.id}} ng-repeat=\"tag in report_type.tags\"><div class=\"tags has-addons\"><span class=tag>{{tag.documentSubjectMatterDomain}}</span> <span class=\"tag is-danger cross\" ng-click=deleteTag(report_type.id,tag.id)><i class=\"fa fa-times\"></i></span></div></div></div></div><div class=\"panel-block report-types-loader-block\" in-view=loaderInView($index,$inview,$inviewInfo) in-view-options=\"{ generateParts: true }\" ng-if=showLoader><div class=loader-text><i class=\"fa fa-circle-o-notch fa-spin\"></i>&nbsp;<span>Loading...</span></div></div></div></nav></div><div class=column><nav id=tags class=panel><p class=panel-heading>Tags <span class=\"tag is-light\">{{numTagResults}}&nbsp;results</span></p><div class=panel-block><p class=\"control has-icons-left\"><input class=\"input is-small\" type=text placeholder=\"search tags\" ng-model=tagQuery ng-keyup=searchTag($event)> <span class=\"icon is-small is-left\"><i class=\"fa fa-search\"></i></span></p></div><div id=tag-list><div class=panel-block data-id={{tag.id}} ng-repeat=\"tag in tags\"><a class=\"button is-info is-outlined is-small\" ng-click=addTag(tag)>Add Tag</a>&nbsp;&nbsp; <a class=\"button is-danger is-outlined is-small\" ng-click=bulkRemoveTag(tag)>Remove Tag</a>&nbsp;&nbsp; <span>{{tag.documentSubjectMatterDomain}}</span></div></div></nav></div></div></div></section>');\n$templateCache.put('app/views/logout/logout.html','<section class=section><div class=container><div class=\"notification is-link\">You have been logged out.</div></div></section>');\n$templateCache.put('app/views/nav/main-nav.html','<!-- NAV --><nav id=navbar class=\"navbar is-fixed-top\" style=\"transform: translateY(0px);\"><div id=specialShadow class=bd-special-shadow style=\"opacity: 1; transform: scaleY(1);\"></div><div class=container><div class=navbar-brand><a class=navbar-item href=/ ><span>Report Type Mapper</span></a><div id=navbarBurger class=\"navbar-burger burger\" data-target=navMenuDocumentation><span></span> <span></span> <span></span></div></div><div id=navMenuDocumentation class=navbar-menu><div class=navbar-end><a class=navbar-item href=/#!/users ng-show=\"userProfile.$hasRole(\\'ROLE_ADMIN\\')\">Users </a><a class=navbar-item><span class=\"tag is-danger is-medium\" ng-show=\"userProfile.$hasRole(\\'ROLE_ADMIN\\')\">Admin</span> </a><a class=navbar-item href=/#!/institutes ng-show=\"userProfile.$hasRole(\\'ROLE_ADMIN\\')\">Institutes </a><a class=navbar-item href=/#!/tags ng-show=\"userProfile.$hasRole(\\'ROLE_ADMIN\\')\">Tags</a><div class=\"navbar-item has-dropdown is-hoverable\" ng-show=userProfile.$isAuthenticated()><a class=navbar-link href=/#!/token>Settings</a><div class=navbar-dropdown><a class=navbar-item href=/#!/token>API Token </a><a class=navbar-item href=/#!/logout>Logout</a></div></div><div class=navbar-item ng-hide=userProfile.$isAuthenticated()><div class=\"field is-grouped\"><p class=control><a class=\"is-link is-outlined button\" href=#!/register><span class=icon><i class=\"fa fa-user-plus\"></i> </span><span>Register</span></a></p><p class=control><a class=\"button is-primary\" href=#!/login><span class=icon><i class=\"fa fa-sign-in\"></i> </span><span>Login</span></a></p></div></div></div></div></div></nav>');\n$templateCache.put('app/views/pending/pending.html','<section class=section><div class=container><div class=\"notification is-success\">Thank you for registering. Your account activation is pending admin approval. After approval, you will be emailed and you will then be able to login and access your account.</div></div></section>');\n$templateCache.put('app/views/register/register.html','<section class=section><div class=container><div class=\"columns is-centered\"><div class=\"column is-half\"><nav class=panel><p class=panel-heading>Register</p><div class=panel-block style=display:block><div class=field><div class=control><input class=input type=text placeholder=\"First name\" ng-model=registerForm.firstName></div></div><div class=field><div class=control><input class=input type=text placeholder=\"Last name\" ng-model=registerForm.lastName></div></div><div class=field><div class=control><div class=select style=display:block;><select style=width:100%; ng-model=registerForm.selectedInstitute ng-options=\"institute.name for institute in institutes track by institute.id\"><!-- <option ng-repeat=\"institute in institutes\" ng-value=\"{{institute.id}}\">{{institute.name}}</option> --></select></div></div></div><div class=field><p class=\"control has-icons-left has-icons-right\"><input class=input type=email placeholder=Email ng-model=registerForm.email> <span class=\"icon is-small is-left\"><i class=\"fa fa-envelope\"></i> </span><span class=\"icon is-small is-right\"><i class=\"fa fa-check\"></i></span></p></div><div class=field><p class=\"control has-icons-left\"><input class=input type=password placeholder=Password ng-model=registerForm.password> <span class=\"icon is-small is-left\"><i class=\"fa fa-lock\"></i></span></p></div><div class=field><p class=control><button class=\"button is-link is-large is-outlined is-fullwidth\" ng-click=register()>Register</button></p></div><div class=\"notification is-danger\" ng-show=registerForm.errors>{{registerForm.errors}}</div></div></nav></div></div></div></section>');\n$templateCache.put('app/views/tag/tag.html','<section class=section><div class=container><div class=columns><div class=column><h3 class=\"title is-3\">Add Tags <span class=\"tag is-light\">Total: {{numTags}}</span></h3><!-- <div class=\"field is-grouped\">\\n          <p class=\"control is-expanded\">\\n            <input class=\"input\" type=\"text\" placeholder=\"Add a tag\" ng-model=\"tagName\"/>\\n          </p>\\n          <p class=\"control\">\\n            <a class=\"button is-primary\" ng-click=\"createTag()\">\\n              Create\\n            </a>\\n          </p>\\n        </div>\\n        <p class=\"help is-danger\" ng-show=\"tagAlreadyExists\">The tag already exists.</p> --><form ng-submit=createTags()><div class=field><label class=label>Upload LOINC Ontology Document</label><!-- <div class=\"control\">\\n              <div class=\"file has-name\">\\n                <label class=\"file-label\">\\n                  <input class=\"file-input\" type=\"file\" fileread=\"list.reportTypes\">\\n                  <span class=\"file-cta\">\\n                    <span class=\"file-icon\">\\n                      <i class=\"fa fa-upload\"></i>\\n                    </span>\\n                    <span class=\"file-label\">\\n                      Choose a file\\u2026\\n                    </span>\\n                  </span>\\n                </label>\\n              </div>\\n            </div> --><!-- <p class=\"help\">Select a csv file to upload report types</p> --><!-- <div class=\"control\"> --><file-field class=button ng-model=tagFile>Select file</file-field><!-- </div> --></div><div class=field><label class=label>File Format</label><div class=control><label class=radio><input type=radio ng-model=fileFormat value=simple> Simple</label> <label class=radio><input type=radio ng-model=fileFormat value=complex> Complex</label></div></div><div class=field><div class=control><input type=submit class=\"button is-link\"></div></div></form></div><div class=column></div></div></div></section>');\n$templateCache.put('app/views/token/token.html','<section class=section><div class=container><div class=columns><div class=column><p>Token: <b>{{apiToken}}</b></p></div><div class=column></div></div></div></section>');\n$templateCache.put('app/views/list/delete/delete.html','');\n$templateCache.put('app/views/list/all/all.html','<section class=section><div class=container><nav class=\"breadcrumb has-arrow-separator\" aria-label=breadcrumbs><ul><li><a>{{instituteName}}</a></li><li class=is-active><a href=/#!/institutes/{{instituteId}}/lists>Lists</a></li></ul></nav><table class=\"table is-bordered is-fullwidth is-narrow is-striped\" ng-show=\"lists.length > 0\"><thead><tr><th>Name</th><th># of Report Types</th><th>Action</th></tr></thead><tbody><tr ng-repeat=\"list in lists\"><td>{{list.name}}</td><td>{{list.numOfReportTypes}}</td><td><a class=\"button is-small is-info is-outlined\" href=/#!/institutes/{{list.institute}}/lists/{{list.id}}/map>Map</a> <a class=\"button is-small is-info is-outlined\" href=/#!/institutes/{{list.institute}}/lists/{{list.id}}/edit>Edit</a> <a class=\"button is-small is-info is-outlined\" href=/#!/institutes/{{list.institute}}/lists/{{list.id}}/delete>Delete</a></td></tr></tbody></table><div class=\"notification is-warning\" ng-show=\"lists.length == 0\">The are currently no lists to show. <strong>Try creating a list below.</strong></div><a class=\"button is-success\" href=/#!/institutes/{{instituteId}}/lists/create>Create List</a></div></section>');\n$templateCache.put('app/views/list/create/create.html','<section class=section><div class=container><nav class=\"breadcrumb has-arrow-separator\" aria-label=breadcrumbs><ul><li><a>{{instituteName}}</a></li><li><a href=/#!/institutes/{{instituteId}}/lists>Lists</a></li><li class=is-active><a href=# aria-current=page>Create</a></li></ul></nav><div class=columns><div class=\"column is-one-third\"><form ng-submit=createList()><div class=field><label class=label>Name</label><div class=control><input class=input type=text placeholder=\"List Name\" ng-model=list.name></div></div><div class=field><label class=label>Report Type File</label><!-- <div class=\"control\">\\n              <div class=\"file has-name\">\\n                <label class=\"file-label\">\\n                  <input class=\"file-input\" type=\"file\" fileread=\"list.reportTypes\">\\n                  <span class=\"file-cta\">\\n                    <span class=\"file-icon\">\\n                      <i class=\"fa fa-upload\"></i>\\n                    </span>\\n                    <span class=\"file-label\">\\n                      Choose a file\\u2026\\n                    </span>\\n                  </span>\\n                </label>\\n              </div>\\n            </div> --><!-- <p class=\"help\">Select a csv file to upload report types</p> --><!-- <div class=\"control\"> --><file-field class=button ng-model=list.reportTypes>Select file</file-field><!-- </div> --></div><div class=field><div class=control><input type=submit class=\"button is-link\"></div></div></form></div></div></div></section>');\n$templateCache.put('app/views/list/edit/edit.html','');\n$templateCache.put('app/views/institutes/all/all.html','<section class=section><div class=container><h3 class=\"title is-3\">Institutes</h3><table class=\"table is-bordered is-fullwidth is-narrow is-striped\" ng-show=\"institutes.length > 0\"><thead><tr><th>Name</th><th># of Lists</th><th>Action</th></tr></thead><tbody><tr ng-repeat=\"institute in institutes\"><td>{{institute.name}}</td><td>{{institute.lists.length}}</td><td><a class=\"button is-small is-info is-outlined\" href=/#!/institutes/{{institute.id}}/lists>View Lists</a> <a class=\"button is-small is-info is-outlined\" href=/#!/institutes/{{institute.id}}/edit>Edit</a> <a class=\"button is-small is-info is-outlined\" href=/#!/institutes/{{institute.id}}/delete>Delete</a></td></tr></tbody></table><div class=\"notification is-warning\" ng-show=\"institutes.length == 0\">The are currently no institutes to show. <strong>Try creating an institute below.</strong> The institute will then become available to choose during user registration.</div><a class=\"button is-success\" href=/#!/institutes/create>Create Institute</a></div></section>');\n$templateCache.put('app/views/institutes/create/create.html','<section class=section><div class=container><div class=columns><div class=column><h3 class=\"title is-3\">Institutes</h3><div class=\"field is-grouped\"><p class=\"control is-expanded\"><input class=input type=text placeholder=\"Enter institute name\" ng-model=instituteName></p><p class=control><a class=\"button is-primary\" ng-click=createInstitute()>Create</a></p></div><p class=\"help is-danger\" ng-show=instituteAlreadyExists>The institute already exists.</p></div><div class=column></div></div></div></section>');\n$templateCache.put('app/views/institutes/delete/delete.html','<section class=section><div class=container><div class=columns><div class=column><h3 class=\"title is-6\">Are you sure you want to delete this institute?</h3><a class=\"button is-danger\" ng-click=deleteInstitute()>Delete</a></div><div class=column></div></div></div></section>');\n$templateCache.put('app/views/institutes/edit/edit.html','<section class=section><div class=container><div class=columns><div class=column><h3 class=\"title is-3\">Edit Institute</h3><div class=\"field is-grouped\"><p class=\"control is-expanded\"><input class=input type=text placeholder=\"Edit institute name\" ng-model=instituteName></p><p class=control><a class=\"button is-primary\" ng-click=editInstitute()>Edit</a></p></div><p class=\"help is-danger\" ng-show=instituteAlreadyExists>The institute already exists.</p></div><div class=column></div></div></div></section>');\n$templateCache.put('app/views/users/all/all.html','<section class=section><div class=container><table class=\"table table-user\"><thead><tr><th>Name</th><th>Email</th><th>Roles</th><th>Institute</th><th>Activate</th><th>Actions</th></tr></thead><tbody><tr ng-repeat=\"user in users\"><td>{{user.firstName}}&nbsp;{{user.lastName}}</td><td>{{user.email}}</td><td><span class=\"tag is-info role-tag\" ng-repeat=\"role in user.roles track by $index\">{{role}}</span></td><td>{{user.institute.name}}</td><td><input type=checkbox ng-model=user.activated ng-change=activateUser(user) ng-disabled=\"user.roles.indexOf(\\'ROLE_ADMIN\\') > 0\"></td><td><a href=/#!/users/{{user.id}}/delete class=\"button is-small is-outlined is-danger\" ng-disabled=\"user.roles.indexOf(\\'ROLE_ADMIN\\') > 0\">Delete</a></td></tr></tbody></table></div></section>');\n$templateCache.put('app/views/users/delete/delete.html','<section class=section><div class=container><h5 class=\"title is-5\">Are you sure you want to delete this user?</h5><div class=\"field is-grouped\"><p class=control><a class=\"button is-danger\" ng-click=deleteUser(userId)>Yes, delete the user.</a></p><p class=control><a class=button href=/#!/users>No, go back.</a></p></div></div></section>');}]);"]}